services:
  db:
    container_name: kp_e2e_db
    platform: linux/x86_64
    image: mysql
    restart: on-failure
    environment:
      MYSQL_DATABASE: wpdb
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
      MYSQL_ROOT_PASSWORD: wordpress
    volumes:
      - db:/var/lib/mysql
    ports:
      - "33066:3306"
    healthcheck:
      test:
        [
          "CMD",
          'mysqladmin',
          'ping',
          '-h',
          'db',
          '-u',
          'root',
          '-p$$MYSQL_ROOT_PASSWORD'
        ]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 5s
  wp:
    container_name: kp_e2e_wp
    depends_on:
      db:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - WP_IMAGE=${WP_IMAGE:-wordpress:latest}
    ports:
      - "8080:80"
    restart: on-failure
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wpdb
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
      WC_VERSION: ${WC_VERSION-}
    volumes:
      - "../../:/var/www/html/wp-content/plugins/klarna-payments-for-woocommerce"
      - "wordpress:/var/www/html"
    healthcheck:
      test: [ "CMD", 'curl', '-f', 'wp' ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 5s
  wp-cli:
    depends_on:
      db:
        condition: service_healthy
      wp:
        condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile-wpcli
    environment:
      WORDPRESS_DB_HOST: db
      WORDPRESS_DB_NAME: wpdb
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_TABLE_PREFIX: wp_
      WC_VERSION: ${WC_VERSION-}
    restart: on-failure
    user: root
    volumes:
      - "../../:/var/www/html/wp-content/plugins/klarna-payments-for-woocommerce"
      - "wordpress:/var/www/html"
  ngrok:
    depends_on:
      db:
        condition: service_healthy
      wp:
        condition: service_healthy
    image: ngrok/ngrok:latest
    restart: always
    ports:
      - "4444:4040"
    command: http wp:80
    environment:
      NGROK_AUTHTOKEN: ${NGROK_AUTH}
volumes:
  db:
  wordpress:
